tsudo: false
language: python

# NOTE: when you add a new python version to the matrix, remember to add it
# also to travis/build-wheels.sh to build the corresponding wheel.
matrix:
  fast_finish: true
  include:
    - python: '2.7'
      env: TOXENV=nopyx-test

    - python: '2.7'
      env: TOXENV=py27-test

    # - python: '2.7'
    #   env: TOXENV=py27-bench

    - python: 'pypy'
      env: TOXENV=pypy-test

    # - python: 'pypy-5.4'
    #   env: TOXENV=pypy-bench

    - python: '3.5'
      env: TOXENV=nopyx-test

    - python: '3.5'
      env: TOXENV=py35-test

    - python: 'pypy3'
      env: TOXENV=pypy3-test

    - python: '3.6'
      env: TOXENV=nopyx-test

    - python: '3.6'
      env: TOXENV=py36-test

    - python: '3.7'
      sudo: required
      dist: xenial
      env: TOXENV=py37-test

    - python: '3.8'
      sudo: required
      dist: xenial
      env: TOXENV=py38-test

    - python: '2.7'
      env: TOXENV=docs

    - stage: deploy
      sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
      install:
        - if [[ -z $TRAVIS_TAG ]]; then exit 0; fi # exit early if it's not a tag
        - docker pull $DOCKER_IMAGE
      script:
        - docker run --rm -v `pwd`:/capnpy $DOCKER_IMAGE /capnpy/travis/build-wheels.sh
        - pip install twine
        - twine upload -u antocuni.wheelbuilder -p $PYPIPASS dist/* wheelhouse/*

cache:
  pip: true
  directories:
    - $HOME/capnp

# ucspi-tcp is currently not allowed on travis, so for now we use the binary
# we committed to the repo. That's why we add travis/bin to the PATH
env:
  global:
    - export PATH="$PATH:$HOME/capnp/bin:$TRAVIS_BUILD_DIR/travis/bin"
    - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/capnp/lib"

    # $PYPIPASS
    - secure: "Zfv08qqPTogFFlulqjh6h92iNNjPMx7ry8eiLG/X+LubivIYG8Y6+7LM+i1ERhWjE8xmZX5MOZawX77cAfBD0zMFKZ0CG8LYIpt5gU2/OTEcKB5zWFmjjLvJ3g6cVMItVuTSY51dRmMBFXOqBycV7Hri3kGQfiKoKFTouop/B5SYJ59ZmHqyFt9hhOlKv+LXUtV336Y8KF8wXSE9lNimsCIy37E/6WhBhqtH9zD6dkQb88r6t3+84kI7DygFTJ4NpfVUkvnoNt6/dJwOeFRZht678G6Yt0SkftzRNMjyZs5Qa0lPS/Zjz/XkxsKplVlLArFHgtenJB3lfYlcuLrLyqx87KWBX3MQVF8ckGhDqMfEoQqjTDrkMBGSc8Z1GTasUGsxatDT7PK0N9r0HxWKjJ3aytTFIM1pwnv6e3uOszhm5XRsMEwTQlMuWQoJL59Ia9l8wTiBHfvRRXWYkyyS+coEEWiMpPCSuxPlMdokX820qRldJcJzodVNTPoIub7Wr3cMQvK9Cvp5O/f+G7HqZ3enhctuh/ClTp/Whgk9bZSw1vwcLQfmKx/3tWBdVumkoUc4tsOzymrsaGPhfJHPFCT2VUk/es1WDNbwabgtkv7o7+nE2HB2o6if+kkDecTTBqa0KsWpy31HJ0dRIw4g8WsE7FHIfS90sbrIkQVHYHY="

addons:
  apt:
    packages:
      - python-dev
      #- ucspi-tcp # for tcpserver, see the comment above


stage: test

before_install:
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then openssl aes-256-cbc -K $encrypted_571f1f821904_key -iv $encrypted_571f1f821904_iv -in ./travis/travis.rsa.enc -out ./travis/travis.rsa -d; fi

install:
  - bash ./travis/install_capnp.sh
  - pip install -U pip # so that we can use wheels
  - pip install tox-travis
  # tox creates the sdist: we need cython to be installed in the env which
  # creates the sdist, to generate the .c files
  - pip install cython==0.29.36

script:
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then bash ./travis/clone-benchmarks-repo.sh; fi
  - tox
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then bash ./travis/commit-results.sh; fi

notifications:
  webhooks:
    urls:
      - https://readthedocs.org/build/capnpy # trigger docs build
    on_success: always
    on_failure: never
